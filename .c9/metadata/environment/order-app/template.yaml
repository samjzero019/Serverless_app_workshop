{"filter":false,"title":"template.yaml","tooltip":"/order-app/template.yaml","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":67,"column":24},"end":{"row":68,"column":0},"action":"insert","lines":["",""],"id":517},{"start":{"row":68,"column":0},"end":{"row":68,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":68,"column":8},"end":{"row":68,"column":10},"action":"insert","lines":["  "],"id":518}],[{"start":{"row":68,"column":10},"end":{"row":68,"column":11},"action":"insert","lines":["N"],"id":519},{"start":{"row":68,"column":11},"end":{"row":68,"column":12},"action":"insert","lines":["a"]}],[{"start":{"row":68,"column":10},"end":{"row":68,"column":12},"action":"remove","lines":["Na"],"id":520},{"start":{"row":68,"column":10},"end":{"row":68,"column":14},"action":"insert","lines":["Name"]}],[{"start":{"row":68,"column":14},"end":{"row":68,"column":15},"action":"insert","lines":[":"],"id":521}],[{"start":{"row":68,"column":15},"end":{"row":68,"column":16},"action":"insert","lines":[" "],"id":522}],[{"start":{"row":68,"column":16},"end":{"row":68,"column":18},"action":"insert","lines":["''"],"id":523}],[{"start":{"row":68,"column":17},"end":{"row":68,"column":18},"action":"insert","lines":["A"],"id":524},{"start":{"row":68,"column":18},"end":{"row":68,"column":19},"action":"insert","lines":["W"]},{"start":{"row":68,"column":19},"end":{"row":68,"column":20},"action":"insert","lines":["S"]},{"start":{"row":68,"column":20},"end":{"row":68,"column":21},"action":"insert","lines":["-"]}],[{"start":{"row":68,"column":21},"end":{"row":68,"column":22},"action":"insert","lines":["I"],"id":525},{"start":{"row":68,"column":22},"end":{"row":68,"column":23},"action":"insert","lines":["n"]}],[{"start":{"row":68,"column":23},"end":{"row":68,"column":24},"action":"insert","lines":["c"],"id":526},{"start":{"row":68,"column":24},"end":{"row":68,"column":25},"action":"insert","lines":["l"]},{"start":{"row":68,"column":25},"end":{"row":68,"column":26},"action":"insert","lines":["u"]},{"start":{"row":68,"column":26},"end":{"row":68,"column":27},"action":"insert","lines":["e"]}],[{"start":{"row":68,"column":26},"end":{"row":68,"column":27},"action":"remove","lines":["e"],"id":527}],[{"start":{"row":68,"column":26},"end":{"row":68,"column":27},"action":"insert","lines":["d"],"id":528},{"start":{"row":68,"column":27},"end":{"row":68,"column":28},"action":"insert","lines":["e"]}],[{"start":{"row":68,"column":29},"end":{"row":69,"column":0},"action":"insert","lines":["",""],"id":529},{"start":{"row":69,"column":0},"end":{"row":69,"column":10},"action":"insert","lines":["          "]},{"start":{"row":69,"column":10},"end":{"row":69,"column":11},"action":"insert","lines":["P"]},{"start":{"row":69,"column":11},"end":{"row":69,"column":12},"action":"insert","lines":["a"]},{"start":{"row":69,"column":12},"end":{"row":69,"column":13},"action":"insert","lines":["r"]},{"start":{"row":69,"column":13},"end":{"row":69,"column":14},"action":"insert","lines":["a"]},{"start":{"row":69,"column":14},"end":{"row":69,"column":15},"action":"insert","lines":["m"]}],[{"start":{"row":69,"column":15},"end":{"row":69,"column":16},"action":"insert","lines":["e"],"id":530},{"start":{"row":69,"column":16},"end":{"row":69,"column":17},"action":"insert","lines":["t"]},{"start":{"row":69,"column":17},"end":{"row":69,"column":18},"action":"insert","lines":["e"]},{"start":{"row":69,"column":18},"end":{"row":69,"column":19},"action":"insert","lines":["r"]},{"start":{"row":69,"column":19},"end":{"row":69,"column":20},"action":"insert","lines":[":"]}],[{"start":{"row":69,"column":20},"end":{"row":69,"column":21},"action":"insert","lines":[" "],"id":531},{"start":{"row":69,"column":21},"end":{"row":70,"column":0},"action":"insert","lines":["",""]},{"start":{"row":70,"column":0},"end":{"row":70,"column":10},"action":"insert","lines":["          "]}],[{"start":{"row":70,"column":10},"end":{"row":70,"column":12},"action":"insert","lines":["  "],"id":532}],[{"start":{"row":70,"column":12},"end":{"row":70,"column":13},"action":"insert","lines":["S"],"id":533},{"start":{"row":70,"column":13},"end":{"row":70,"column":14},"action":"insert","lines":["e"]},{"start":{"row":70,"column":14},"end":{"row":70,"column":15},"action":"insert","lines":["r"]},{"start":{"row":70,"column":15},"end":{"row":70,"column":16},"action":"insert","lines":["v"]}],[{"start":{"row":70,"column":16},"end":{"row":70,"column":17},"action":"insert","lines":["i"],"id":534},{"start":{"row":70,"column":17},"end":{"row":70,"column":18},"action":"insert","lines":["c"]},{"start":{"row":70,"column":18},"end":{"row":70,"column":19},"action":"insert","lines":["e"]},{"start":{"row":70,"column":19},"end":{"row":70,"column":20},"action":"insert","lines":[":"]},{"start":{"row":70,"column":20},"end":{"row":70,"column":21},"action":"insert","lines":["L"]}],[{"start":{"row":70,"column":20},"end":{"row":70,"column":21},"action":"remove","lines":["L"],"id":535}],[{"start":{"row":70,"column":19},"end":{"row":70,"column":20},"action":"remove","lines":[":"],"id":536},{"start":{"row":70,"column":18},"end":{"row":70,"column":19},"action":"remove","lines":["e"]},{"start":{"row":70,"column":17},"end":{"row":70,"column":18},"action":"remove","lines":["c"]},{"start":{"row":70,"column":16},"end":{"row":70,"column":17},"action":"remove","lines":["i"]},{"start":{"row":70,"column":15},"end":{"row":70,"column":16},"action":"remove","lines":["v"]},{"start":{"row":70,"column":14},"end":{"row":70,"column":15},"action":"remove","lines":["r"]},{"start":{"row":70,"column":13},"end":{"row":70,"column":14},"action":"remove","lines":["e"]},{"start":{"row":70,"column":12},"end":{"row":70,"column":13},"action":"remove","lines":["S"]}],[{"start":{"row":70,"column":12},"end":{"row":70,"column":13},"action":"insert","lines":["L"],"id":537},{"start":{"row":70,"column":13},"end":{"row":70,"column":14},"action":"insert","lines":["o"]},{"start":{"row":70,"column":14},"end":{"row":70,"column":15},"action":"insert","lines":["c"]},{"start":{"row":70,"column":15},"end":{"row":70,"column":16},"action":"insert","lines":["a"]},{"start":{"row":70,"column":16},"end":{"row":70,"column":17},"action":"insert","lines":["t"]},{"start":{"row":70,"column":17},"end":{"row":70,"column":18},"action":"insert","lines":["u"]},{"start":{"row":70,"column":18},"end":{"row":70,"column":19},"action":"insert","lines":["o"]}],[{"start":{"row":70,"column":18},"end":{"row":70,"column":19},"action":"remove","lines":["o"],"id":538},{"start":{"row":70,"column":17},"end":{"row":70,"column":18},"action":"remove","lines":["u"]}],[{"start":{"row":70,"column":17},"end":{"row":70,"column":18},"action":"insert","lines":["i"],"id":539},{"start":{"row":70,"column":18},"end":{"row":70,"column":19},"action":"insert","lines":["o"]},{"start":{"row":70,"column":19},"end":{"row":70,"column":20},"action":"insert","lines":["n"]},{"start":{"row":70,"column":20},"end":{"row":70,"column":21},"action":"insert","lines":[":"]}],[{"start":{"row":70,"column":21},"end":{"row":70,"column":22},"action":"insert","lines":[" "],"id":540}],[{"start":{"row":70,"column":22},"end":{"row":70,"column":24},"action":"insert","lines":["''"],"id":541}],[{"start":{"row":70,"column":23},"end":{"row":70,"column":24},"action":"insert","lines":["."],"id":542},{"start":{"row":70,"column":24},"end":{"row":70,"column":25},"action":"insert","lines":["/"]},{"start":{"row":70,"column":25},"end":{"row":70,"column":26},"action":"insert","lines":["a"]}],[{"start":{"row":70,"column":26},"end":{"row":70,"column":27},"action":"insert","lines":["p"],"id":543},{"start":{"row":70,"column":27},"end":{"row":70,"column":28},"action":"insert","lines":["i"]}],[{"start":{"row":70,"column":25},"end":{"row":70,"column":28},"action":"remove","lines":["api"],"id":544},{"start":{"row":70,"column":25},"end":{"row":70,"column":28},"action":"insert","lines":["api"]}],[{"start":{"row":70,"column":28},"end":{"row":70,"column":29},"action":"insert","lines":["."],"id":545},{"start":{"row":70,"column":29},"end":{"row":70,"column":30},"action":"insert","lines":["y"]},{"start":{"row":70,"column":30},"end":{"row":70,"column":31},"action":"insert","lines":["a"]}],[{"start":{"row":70,"column":31},"end":{"row":70,"column":32},"action":"insert","lines":["m"],"id":546},{"start":{"row":70,"column":32},"end":{"row":70,"column":33},"action":"insert","lines":["l"]}],[{"start":{"row":70,"column":34},"end":{"row":71,"column":0},"action":"insert","lines":["",""],"id":547},{"start":{"row":71,"column":0},"end":{"row":71,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":71,"column":10},"end":{"row":71,"column":12},"action":"remove","lines":["  "],"id":548}],[{"start":{"row":71,"column":8},"end":{"row":71,"column":10},"action":"remove","lines":["  "],"id":549},{"start":{"row":71,"column":6},"end":{"row":71,"column":8},"action":"remove","lines":["  "]},{"start":{"row":71,"column":4},"end":{"row":71,"column":6},"action":"remove","lines":["  "]},{"start":{"row":71,"column":2},"end":{"row":71,"column":4},"action":"remove","lines":["  "]}],[{"start":{"row":71,"column":2},"end":{"row":100,"column":35},"action":"insert","lines":["ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\""],"id":550}],[{"start":{"row":112,"column":2},"end":{"row":113,"column":0},"action":"insert","lines":["",""],"id":551},{"start":{"row":113,"column":0},"end":{"row":113,"column":2},"action":"insert","lines":["  "]},{"start":{"row":113,"column":2},"end":{"row":114,"column":0},"action":"insert","lines":["",""]},{"start":{"row":114,"column":0},"end":{"row":114,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":113,"column":2},"end":{"row":116,"column":0},"action":"insert","lines":["  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"",""],"id":552}],[{"start":{"row":113,"column":2},"end":{"row":113,"column":4},"action":"remove","lines":["  "],"id":553}],[{"start":{"row":114,"column":2},"end":{"row":114,"column":4},"action":"insert","lines":["  "],"id":554}],[{"start":{"row":60,"column":12},"end":{"row":60,"column":13},"action":"remove","lines":["g"],"id":555},{"start":{"row":60,"column":11},"end":{"row":60,"column":12},"action":"remove","lines":["n"]},{"start":{"row":60,"column":10},"end":{"row":60,"column":11},"action":"remove","lines":["i"]}],[{"start":{"row":60,"column":10},"end":{"row":60,"column":11},"action":"insert","lines":["e"],"id":556}],[{"start":{"row":114,"column":4},"end":{"row":114,"column":6},"action":"remove","lines":["  "],"id":557}],[{"start":{"row":60,"column":6},"end":{"row":60,"column":15},"action":"remove","lines":["StageName"],"id":558},{"start":{"row":60,"column":6},"end":{"row":60,"column":7},"action":"insert","lines":["S"]},{"start":{"row":60,"column":7},"end":{"row":60,"column":8},"action":"insert","lines":["t"]}],[{"start":{"row":60,"column":8},"end":{"row":60,"column":9},"action":"insert","lines":["a"],"id":559},{"start":{"row":60,"column":9},"end":{"row":60,"column":10},"action":"insert","lines":["g"]},{"start":{"row":60,"column":10},"end":{"row":60,"column":11},"action":"insert","lines":["e"]},{"start":{"row":60,"column":11},"end":{"row":60,"column":12},"action":"insert","lines":["N"]},{"start":{"row":60,"column":12},"end":{"row":60,"column":13},"action":"insert","lines":["a"]}],[{"start":{"row":60,"column":13},"end":{"row":60,"column":14},"action":"insert","lines":["m"],"id":560},{"start":{"row":60,"column":14},"end":{"row":60,"column":15},"action":"insert","lines":["e"]}],[{"start":{"row":60,"column":19},"end":{"row":60,"column":20},"action":"remove","lines":["v"],"id":561},{"start":{"row":60,"column":18},"end":{"row":60,"column":19},"action":"remove","lines":["e"]},{"start":{"row":60,"column":17},"end":{"row":60,"column":18},"action":"remove","lines":["D"]},{"start":{"row":60,"column":16},"end":{"row":60,"column":17},"action":"remove","lines":[" "]}],[{"start":{"row":60,"column":16},"end":{"row":60,"column":17},"action":"insert","lines":[" "],"id":562},{"start":{"row":60,"column":17},"end":{"row":60,"column":18},"action":"insert","lines":["D"]},{"start":{"row":60,"column":18},"end":{"row":60,"column":19},"action":"insert","lines":["e"]},{"start":{"row":60,"column":19},"end":{"row":60,"column":20},"action":"insert","lines":["v"]}],[{"start":{"row":60,"column":4},"end":{"row":60,"column":6},"action":"remove","lines":["  "],"id":563}],[{"start":{"row":60,"column":4},"end":{"row":60,"column":6},"action":"insert","lines":["  "],"id":564}],[{"start":{"row":60,"column":17},"end":{"row":60,"column":20},"action":"remove","lines":["Dev"],"id":565},{"start":{"row":60,"column":17},"end":{"row":60,"column":18},"action":"insert","lines":["'"]}],[{"start":{"row":60,"column":17},"end":{"row":60,"column":18},"action":"remove","lines":["'"],"id":566}],[{"start":{"row":60,"column":5},"end":{"row":60,"column":16},"action":"remove","lines":[" StageName:"],"id":567},{"start":{"row":60,"column":5},"end":{"row":60,"column":20},"action":"insert","lines":[" StageName: Dev"]}],[{"start":{"row":60,"column":6},"end":{"row":60,"column":15},"action":"remove","lines":["StageName"],"id":570}],[{"start":{"row":60,"column":6},"end":{"row":60,"column":7},"action":"insert","lines":["'"],"id":571},{"start":{"row":60,"column":7},"end":{"row":60,"column":8},"action":"insert","lines":["'"]}],[{"start":{"row":60,"column":7},"end":{"row":60,"column":16},"action":"insert","lines":["StageName"],"id":572}],[{"start":{"row":60,"column":16},"end":{"row":60,"column":17},"action":"remove","lines":["'"],"id":573}],[{"start":{"row":60,"column":6},"end":{"row":60,"column":7},"action":"remove","lines":["'"],"id":574}],[{"start":{"row":57,"column":2},"end":{"row":100,"column":35},"action":"remove","lines":["OrderApi:","    Type: AWS::Serverless::Api","    properties:","      StageName: Dev ","      Cors:","        AllowMethods: \"'GET POST DELETE UPDATE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS-Include'","          Parameter: ","            Location: './api.yaml'","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\""],"id":575}],[{"start":{"row":57,"column":2},"end":{"row":102,"column":0},"action":"insert","lines":["  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\"",""],"id":576}],[{"start":{"row":57,"column":2},"end":{"row":57,"column":4},"action":"remove","lines":["  "],"id":577}],[{"start":{"row":0,"column":0},"end":{"row":119,"column":2},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst","Globals:","  Function:","    Timeout: 3","","Resources:","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties:","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema:","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput:","        ReadCapacityUnits: 2","        WriteCapacityUnits: 2","      ","  GetOrders:","    Type: AWS::Serverless::Function","    properties:","      CodeUri: src/order-api/function/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment: ","        variable:","          ORDER_TABLE: !Ref OrderTable","      Policies: ","        statement:","          - Effect: Allow","            Action: ","              - dynamodb::GetItem","              - dynamodb::Query","              - dynamodb:: Scan","            Resources:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action: ","              - logs:*","            Resources:","              - \"*\"","    ","  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\"","","        ","Outputs:","  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function","  # Find out more about other implicit resources you can reference within SAM","  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  GetOrders:","    Description: \"GetOrders lambda Function ARN\"","    Value: !Ref GetOrders.Arn","  ","  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"","","  "],"id":578},{"start":{"row":0,"column":0},"end":{"row":112,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  order-app","","  Sample SAM Template for order-app","  ","Globals:","  Function:","    Timeout: 3","","Resources:","  OrderTable:","    Type: AWS::DynamoDB::Table","    Properties: ","      TableName: order-table","      AttributeDefinitions: ","        - AttributeName: user_id","          AttributeType: S","        - AttributeName: id","          AttributeType: S","      KeySchema: ","        - AttributeName: user_id","          KeyType: HASH","        - AttributeName: id","          KeyType: RANGE","      ProvisionedThroughput: ","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","","  GetOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-orders/","      Handler: app.getOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","              - dynamodb:Query ","              - dynamodb:Scan","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ","  OrderApi:","    Type: AWS::Serverless::Api","    Properties:","      StageName: Dev","      Cors:","        AllowMethods: \"'POST, GET, UPDATE, DELETE'\"","        AllowHeaders: \"'X-Forwarded-For'\"","        AllowOrigin: \"'*'\"","        MaxAge: \"'600'\"","      DefinitionBody:","        'Fn::Transform':","          Name: 'AWS::Include'","          Parameters:","            Location: './api.yaml'","","  ApiGwExecutionRole: ","    Type: \"AWS::IAM::Role\"","    Properties: ","      AssumeRolePolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          - ","            Effect: \"Allow\"","            Principal: ","              Service: ","                - \"apigateway.amazonaws.com\"","                - \"lambda.amazonaws.com\"","            Action: ","              - \"sts:AssumeRole\"","      Path: \"/\"","","  ApiGwExecutionPolicy: ","    Type: \"AWS::IAM::Policy\"","    Properties: ","      PolicyName: \"apigw-execution-policy\"","      PolicyDocument: ","        Version: \"2012-10-17\"","        Statement: ","          Action:","            - lambda:*","          Effect: Allow","          Resource:","            - !GetAtt GetOrders.Arn","      Roles: ","        - Ref: \"ApiGwExecutionRole\"","","Outputs:","  DynamoDBTableName:","    Description: \"DynamoDB Table Name\"","    Value: !Ref OrderTable","  GetOrders:","    Description: \"GetOrders Lambda Function ARN\"","    Value: !GetAtt GetOrders.Arn","  OrderApiEndpoint:","    Description: \"API Gateway endpoint URL for Dev stage for Order Get function\"","    Value: !Sub \"https://${OrderApi}.execute-api.${AWS::Region}.amazonaws.com/Dev/orders/\"","",""]}],[{"start":{"row":54,"column":19},"end":{"row":54,"column":20},"action":"remove","lines":[" "],"id":579}],[{"start":{"row":100,"column":0},"end":{"row":101,"column":0},"action":"insert","lines":["",""],"id":580},{"start":{"row":101,"column":0},"end":{"row":102,"column":0},"action":"insert","lines":["",""]},{"start":{"row":102,"column":0},"end":{"row":103,"column":0},"action":"insert","lines":["",""]},{"start":{"row":103,"column":0},"end":{"row":104,"column":0},"action":"insert","lines":["",""]},{"start":{"row":104,"column":0},"end":{"row":105,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":101,"column":0},"end":{"row":101,"column":2},"action":"insert","lines":["  "],"id":581}],[{"start":{"row":101,"column":2},"end":{"row":124,"column":0},"action":"insert","lines":["  PostOrders:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/post-orders/","      Handler: app.postOrders","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:PutItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ",""],"id":582}],[{"start":{"row":101,"column":2},"end":{"row":101,"column":4},"action":"remove","lines":["  "],"id":583}],[{"start":{"row":124,"column":0},"end":{"row":125,"column":0},"action":"remove","lines":["",""],"id":584}],[{"start":{"row":124,"column":0},"end":{"row":125,"column":0},"action":"remove","lines":["",""],"id":585}],[{"start":{"row":138,"column":0},"end":{"row":138,"column":2},"action":"insert","lines":["  "],"id":586}],[{"start":{"row":138,"column":2},"end":{"row":141,"column":0},"action":"insert","lines":["  PostOrders:","    Description: \"PostOrders Lambda Function ARN\"","    Value: !GetAtt PostOrders.Arn",""],"id":587}],[{"start":{"row":138,"column":2},"end":{"row":138,"column":4},"action":"remove","lines":["  "],"id":588}],[{"start":{"row":97,"column":35},"end":{"row":98,"column":0},"action":"insert","lines":["",""],"id":589},{"start":{"row":98,"column":0},"end":{"row":98,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":98,"column":12},"end":{"row":99,"column":0},"action":"insert","lines":["            - !GetAtt PostOrders.Arn",""],"id":590}],[{"start":{"row":98,"column":0},"end":{"row":98,"column":2},"action":"remove","lines":["  "],"id":591}],[{"start":{"row":98,"column":0},"end":{"row":98,"column":2},"action":"remove","lines":["  "],"id":592}],[{"start":{"row":98,"column":0},"end":{"row":98,"column":2},"action":"remove","lines":["  "],"id":593}],[{"start":{"row":98,"column":0},"end":{"row":98,"column":2},"action":"remove","lines":["  "],"id":594}],[{"start":{"row":98,"column":0},"end":{"row":98,"column":2},"action":"remove","lines":["  "],"id":595}],[{"start":{"row":98,"column":0},"end":{"row":98,"column":2},"action":"remove","lines":["  "],"id":596}],[{"start":{"row":126,"column":0},"end":{"row":126,"column":2},"action":"insert","lines":["  "],"id":597}],[{"start":{"row":126,"column":2},"end":{"row":149,"column":0},"action":"insert","lines":["  GetSingleOrder:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/get-single-order/","      Handler: app.getOrderById","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:GetItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ",""],"id":598}],[{"start":{"row":126,"column":2},"end":{"row":126,"column":4},"action":"remove","lines":["  "],"id":599}],[{"start":{"row":166,"column":0},"end":{"row":169,"column":0},"action":"insert","lines":["  GetSingleOrder:","    Description: \"GetSingleOrder Lambda Function ARN\"","    Value: !GetAtt GetSingleOrder.Arn",""],"id":600}],[{"start":{"row":99,"column":0},"end":{"row":99,"column":2},"action":"insert","lines":["  "],"id":601}],[{"start":{"row":99,"column":2},"end":{"row":99,"column":4},"action":"insert","lines":["  "],"id":602}],[{"start":{"row":99,"column":4},"end":{"row":99,"column":6},"action":"insert","lines":["  "],"id":603}],[{"start":{"row":99,"column":6},"end":{"row":99,"column":8},"action":"insert","lines":["  "],"id":604}],[{"start":{"row":99,"column":8},"end":{"row":100,"column":0},"action":"insert","lines":["            - !GetAtt GetSingleOrder.Arn",""],"id":605}],[{"start":{"row":99,"column":0},"end":{"row":99,"column":2},"action":"remove","lines":["  "],"id":606}],[{"start":{"row":99,"column":0},"end":{"row":99,"column":2},"action":"remove","lines":["  "],"id":607}],[{"start":{"row":99,"column":0},"end":{"row":99,"column":2},"action":"remove","lines":["  "],"id":608}],[{"start":{"row":99,"column":0},"end":{"row":99,"column":2},"action":"remove","lines":["  "],"id":609}],[{"start":{"row":151,"column":0},"end":{"row":174,"column":0},"action":"insert","lines":["  UpdateOrder:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/update-order/","      Handler: app.updateOrder","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:UpdateItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ",""],"id":610}],[{"start":{"row":193,"column":0},"end":{"row":196,"column":0},"action":"insert","lines":["  UpdateOrder:","    Description: \"UpdateOrder Lambda Function ARN\"","    Value: !GetAtt UpdateOrder.Arn",""],"id":611}],[{"start":{"row":99,"column":40},"end":{"row":100,"column":0},"action":"insert","lines":["",""],"id":612},{"start":{"row":100,"column":0},"end":{"row":100,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":100,"column":0},"end":{"row":101,"column":0},"action":"insert","lines":["            - !GetAtt UpdateOrder.Arn",""],"id":613}],[{"start":{"row":176,"column":0},"end":{"row":199,"column":0},"action":"insert","lines":["  DeleteOrder:","    Type: AWS::Serverless::Function ","    Properties:","      CodeUri: src/order-api/functions/delete-order/","      Handler: app.deleteOrder","      Runtime: nodejs14.x","      Environment:","        Variables:","          ORDER_TABLE: !Ref OrderTable","      Policies:","        Statement:","          - Effect: Allow","            Action:","              - dynamodb:DeleteItem","            Resource:","              - !Sub ","                - 'arn:aws:dynamodb:*:*:table/${Table}'","                - { Table: !Ref OrderTable }","          - Effect: Allow","            Action:","              - logs:*","            Resource:","              - \"*\"    ",""],"id":614}],[{"start":{"row":221,"column":0},"end":{"row":224,"column":0},"action":"insert","lines":["  DeleteOrder:","    Description: \"DeleteOrder Lambda Function ARN\"","    Value: !GetAtt DeleteOrder.Arn",""],"id":615}],[{"start":{"row":101,"column":2},"end":{"row":102,"column":0},"action":"insert","lines":["            - !GetAtt DeleteOrder.Arn",""],"id":616}],[{"start":{"row":101,"column":14},"end":{"row":102,"column":0},"action":"insert","lines":["",""],"id":617},{"start":{"row":102,"column":0},"end":{"row":102,"column":14},"action":"insert","lines":["              "]}],[{"start":{"row":102,"column":12},"end":{"row":102,"column":14},"action":"remove","lines":["  "],"id":618}],[{"start":{"row":101,"column":12},"end":{"row":102,"column":12},"action":"remove","lines":["  ","            "],"id":619}]]},"ace":{"folds":[],"scrolltop":1328,"scrollleft":0,"selection":{"start":{"row":125,"column":25},"end":{"row":125,"column":25},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":33,"state":"start","mode":"ace/mode/yaml"}},"timestamp":1674649147564,"hash":"2f975fac04b616913a05f93ac39af7cb9dd87972"}